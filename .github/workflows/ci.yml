name: NRS CI

on: [push, workflow_dispatch]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install xmllint
        run: sudo apt update && sudo apt install libxml2-utils
      - name: Create temp directory
        run: mkdir -p temp
      - name: Retrieve schema file
        run: curl https://raw.githubusercontent.com/btmxh/nrsml/pr19/xml/schema.xsd -o temp/schema.xsd
      - name: Validate the NRSML documents
        run: xmllint --schema temp/schema.xsd nrs/**/*.xml --noout
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup Deno
        uses: denoland/setup-deno@v2
      - name: Create temp directory
        run: mkdir -p temp
      - name: Checkout validator repository
        uses: actions/checkout@v4
        with:
          repository: "btmxh/nrs-validator"
          path: "temp/nrs-validator"
          ref: "pr19"
      - name: Generate bulk.json
        run: deno task generate
      - name: Run the validator
        run: deno run --allow-all temp/nrs-validator/main.ts output/bulk.json
  prettier:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install prettier
        run: npm install
      - name: Run prettier check
        run: ./node_modules/.bin/prettier --check . --plugin @prettier/plugin-xml
  release:
    runs-on: ubuntu-latest
    needs: [lint, validate, prettier]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup Deno
        uses: denoland/setup-deno@v2
      - name: Generate output files
        run: deno task ci
      - name: Split branch name
        id: split
        run: echo "fragment=${BRANCH##*/}" >> $GITHUB_OUTPUT
        env:
          BRANCH: ${{ github.ref_name }}
      - name: Get release tag suffix
        id: release_tag_name
        run: echo "fragment=$(date +'%Y%m%d-%H%M')" >> $GITHUB_OUTPUT
      - name: Create release
        uses: marvinpinto/action-automatic-releases@latest
        if: ${{ !contains(github.ref, 'dependabot') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ steps.release_tag_name.outputs.fragment }}-${{ steps.split.outputs.fragment }}"
          title: " ${{ steps.split.outputs.fragment }} #${{ github.run_number }}"
          prerelease: false
          files: |
            output/entries.json
            output/scores.json
            output/impacts.json
            output/relations.json
            output/bulk.json
            output/nrs.csv
      - name: Update latest release
        uses: marvinpinto/action-automatic-releases@latest
        if: ${{ !contains(github.ref, 'dependabot') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest-${{ steps.split.outputs.fragment }}"
          title: "Latest NRS output files (branch ${{ steps.split.outputs.fragment }})"
          prerelease: false
          files: |
            output/entries.json
            output/scores.json
            output/impacts.json
            output/relations.json
            output/bulk.json
            output/nrs.csv
